#!/usr/bin/python

    ##
    ## IMPORTANT: the 'remove' command executed when removing a package is executed befor a 'purge'
    ## if we remove the folder we loose de config file from where we read the database info
    ## Don't alter this file/order
    ##

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

import sys
import shutil
import os

#
# On remove: remove NodeJs dependencies
#
arg = sys.argv[1]
if arg == 'remove':
    #
    # Remove NodeJs dependencies folder
    #
    path = "@TERRAMA2_DESTINATION@webapp/node_modules"
    if os.path.isdir(path):
        shutil.rmtree(path, ignore_errors=True, onerror=None)

    path = "@TERRAMA2_DESTINATION@webmonitor/node_modules"
    if os.path.isdir(path):
        shutil.rmtree(path, ignore_errors=True, onerror=None)

    path = "@TERRAMA2_DESTINATION@webcomponents/node_modules"
    if os.path.isdir(path):
        shutil.rmtree(path, ignore_errors=True, onerror=None)
    path = "@TERRAMA2_DESTINATION@webcomponents/dist"
    if os.path.isdir(path):
        shutil.rmtree(path, ignore_errors=True, onerror=None)
    path = "@TERRAMA2_DESTINATION@webcomponents/docs"
    if os.path.isdir(path):
        shutil.rmtree(path, ignore_errors=True, onerror=None)

sys.exit(0)
