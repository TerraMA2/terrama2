#  Copyright (C) 2007 National Institute For Space Research (INPE) - Brazil.
#
#  This file is part of TerraMA2 - a free and open source computational
#  platform for analysis, monitoring, and alert of geo-environmental extremes.
#
#  TerraMA2 is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation, either version 3 of the License,
#  or (at your option) any later version.
#
#  TerraMA2 is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with TerraMA2. See LICENSE. If not, write to
#  TerraMA2 Team at <terrama2-team@dpi.inpe.br>.
#
#
#  Description: CPack Options.
#
#  Author: Gilberto Ribeiro de Queiroz
#          Vinicius Campanha
#

set(CPACK_PACKAGE_NAME "TerraMA2")
set(CPACK_PACKAGE_VERSION @TERRAMA2_VERSION_STRING@)
set(CPACK_PACKAGE_VENDOR "INPE")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "TerraMA2 Platform")
set(CPACK_PACKAGE_VERSION_MAJOR @TERRAMA2_VERSION_MAJOR@)
set(CPACK_PACKAGE_VERSION_MINOR @TERRAMA2_VERSION_MINOR@)
set(CPACK_PACKAGE_VERSION_PATCH @TERRAMA2_VERSION_PATCH@)

set(CPACK_RESOURCE_FILE_LICENSE @CMAKE_BINARY_DIR@/COPYING.txt)

#
# getting some variables from CMake
#
set(MSVC10 @MSVC10@)
set(MSVC12 @MSVC12@)
set(CMAKE_CL_64 @CMAKE_CL_64@)
set(APPLE @APPLE@)
set(UNIX @UNIX@)

#
# determining the binary package name depending on toolset used in the build
#
if(NOT DEFINED CPACK_SOURCE_PACKAGE_FILE_NAME)
  if(MSVC10 OR MSVC12)
    if(CMAKE_CL_64)
      set(CPACK_PACKAGE_FILE_NAME "TerraMA2-@TERRAMA2_VERSION_STRING@-win64")
    else()
      set(CPACK_PACKAGE_FILE_NAME "TerraMA2-@TERRAMA2_VERSION_STRING@-win32")
    endif()
  elseif(APPLE)
    set(CPACK_PACKAGE_FILE_NAME "TerraMA2-@TERRAMA2_VERSION_STRING@-macosx")
  elseif(UNIX)
    set(CPACK_PACKAGE_FILE_NAME "TerraMA2-@TERRAMA2_VERSION_STRING@-linux-@TERRAMA2_PKG_ARCHITECTURE@")
  else()
    message(FATAL_ERROR "TerraMA2: unknown platform for generating install package. See terrama2-cpack-options.cmake.in for more details!")
  endif()
else()
  set(CPACK_PACKAGE_FILE_NAME "TerraMA2-@TERRAMA2_VERSION_STRING@-src")
endif()


#
# specific configuration for NSIS package generator
#
if(CPACK_GENERATOR MATCHES "NSIS")

  set(CPACK_PACKAGE_INSTALL_DIRECTORY "terrama2@TERRAMA2_VERSION_STRING@")

  set(CPACK_NSIS_MENU_LINKS
      "doc/api/html/index.html" "API Reference")

  set(CPACK_NSIS_PACKAGE_NAME "TerraMA2")
  set(CPACK_NSIS_DISPLAY_NAME "TerraMA2 version @TERRAMA2_VERSION_STRING@")

  set(CPACK_NSIS_HELP_LINK "https://github.com/TerraMA2/terrama2")
  set(CPACK_NSIS_URL_INFO_ABOUT "https://github.com/TerraMA2/terrama2")
  set(CPACK_NSIS_CONTACT "terrama2-team@dpi.inpe.br")

  set(bitName "(Win32)")

  if(CMAKE_CL_64)
    set(CPACK_NSIS_INSTALL_ROOT "$PROGRAMFILES64")
    set(CPACK_NSIS_PACKAGE_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} (Win64)")
    set(bitName "(Win64)")
  else()
    set(CPACK_NSIS_INSTALL_ROOT "$PROGRAMFILES")
    set(CPACK_NSIS_PACKAGE_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY}")
  endif()

  # To overwrite a previous installed version
  set(CPACK_PACKAGE_INSTALL_REGISTRY_KEY ${CPACK_PACKAGE_NAME})

  set(shortCutName "TerraView @TERRAMA2_VERSION_STRING@ ${bitName}")

  set(CPACK_PACKAGE_EXECUTABLES "terrama2;${shortCutName}")

  set(CPACK_NSIS_CREATE_ICONS_EXTRA "
  SetOutPath \"$INSTDIR\\bin\";
  CreateShortCut \"$SMPROGRAMS\\$STARTMENU_FOLDER\\${shortCutName}.lnk\" \"$INSTDIR\\bin\\terrama2_admin.exe\" \"\" \"$INSTDIR\\share\\terrama2\\icons\\terrama2\\48x48\\admin\\admin.ico\";
  CreateShortCut \"$DESKTOP\\${shortCutName}.lnk\" \"$INSTDIR\\bin\\terrama2_admin.exe\" \"\" \"$INSTDIR\\share\\terrama2\\icons\\terrama2\\48x48\\admin\\admin.ico\"")

  list (APPEND CPACK_NSIS_DELETE_ICONS_EXTRA "
  Delete \"$SMPROGRAMS\\$MUI_TEMP\\${shortCutName}.lnk\";
  Delete \"$DESKTOP\\${shortCutName}.lnk\"")

#  list (APPEND CPACK_NSIS_EXTRA_INSTALL_COMMANDS "
#  # Creating GDAL_DIR enviroment variable.
#  # WriteRegExpandStr HKLM \"SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment\" \"GDAL_DATA\" \"$INSTDIR\\share\\gdal-data\";
#  WriteRegExpandStr HKLM \"SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment\" \"TERRAMA2_HOME\" \"$INSTDIR\";
#  SendMessage \${HWND_BROADCAST} \${WM_WININICHANGE} 0 \"STR:Environment\" /TIMEOUT=5000"
#  )

#  set (CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "
#  # Removing GDAL_DIR from enviroment variables.
#  # DeleteRegValue HKLM \"SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment\" \"GDAL_DATA\";
#  DeleteRegValue HKLM \"SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment\" \"TERRAMA2_HOME\";
#  SendMessage \${HWND_BROADCAST} \${WM_WININICHANGE} 0 \"STR:Environment\" /TIMEOUT=5000"
#  )

 # File types association:
 list (APPEND CPACK_NSIS_EXTRA_INSTALL_COMMANDS "
   WriteRegStr HKCR \".terrama2\" \"\" \"TerraMA2.Project\"; #registering file extension
   WriteRegStr HKCR \"TerraMA2.Project\" \"\" \"TerraMA2 Project File\"; #registering extension desc
   WriteRegStr HKCR \"TerraMA2.Project\\DefaultIcon\" \"\" \"$INSTDIR\\share\\terraview\\images\\ico\\terraview-projectfile-icon.ico\"; #registering extension icon
   WriteRegStr HKCR \"TerraMA2.Project\\shell\\open\\command\" \"\" '\"$INSTDIR\\bin\\terrama2_admin.exe\" \"%1\"'; #extension open command
   SetRebootFlag true
 ")

 list (APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "
   DeleteRegKey HKCR \".terrama2\"; #removing extension register
   DeleteRegKey HKCR \"TerraMA2.Project\"; #removing file association register
 ")

endif()

if(CPACK_GENERATOR MATCHES "ZIP")
  set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY 0)
endif()

if(CPACK_GENERATOR MATCHES "SOURCE_TGZ")
endif()

if(CPACK_GENERATOR MATCHES "DEB")

  if(@TERRAMA2_PKG_ARCHITECTURE@ STREQUAL "x64")
    #64 bits compiler detected
    set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "amd64")
  else()
    if(@TERRAMA2_PKG_ARCHITECTURE@ STREQUAL "x86")
      #32 bits compiler detected
      set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "i386")
    else()
      set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
    endif()
  endif()

  set(CPACK_DEBIAN_PACKAGE_NAME "terrama2")
  # set(CPACK_DEBIAN_PACKAGE_NAME "terrama2-@TERRAMA2_VERSION_STRING@-@TERRAMA2_PKG_ARCHITECTURE@")

  #NOTE: the python-psycopg2 package in needed only to remove the database on package purge
  set(CPACK_DEBIAN_PACKAGE_DEPENDS "libc6 (>= 2.3.1-6), libgcc1 (>= 1:3.4.2-12), terralib-5.2.0 (= 5.2.0), nodejs (>= 4.7.0), libquazip0 (>= 0.6), build-essential, git, screen, python-psycopg2")

  set(CPACK_DEBIAN_PACKAGE_MAINTAINER "Gilberto Ribeiro de Queiroz (gribeiro@dpi.inpe.br)")

  set(CPACK_DEBIAN_PACKAGE_DESCRIPTION "TerraMA2")

  set(CPACK_DEBIAN_PACKAGE_SECTION "devel")

  set(CPACK_DEBIAN_PACKAGE_PRIORITY "optional")

  set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)

  set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA "@TERRAMA2_ABSOLUTE_ROOT_DIR@/scripts/postinst;@TERRAMA2_ABSOLUTE_ROOT_DIR@/scripts/prerm;@TERRAMA2_ABSOLUTE_ROOT_DIR@/scripts/postrm")

endif()

if(CPACK_GENERATOR MATCHES "RPM")

  if(@TERRAMA2_PKG_ARCHITECTURE@ STREQUAL "x86")
    #32 bits compiler detected
    set(CPACK_RPM_PACKAGE_ARCHITECTURE "i386")
  else()
    if(@TERRAMA2_PKG_ARCHITECTURE@ STREQUAL "x64")
      #64 bits compiler detected
      set(CPACK_RPM_PACKAGE_ARCHITECTURE "amd64")
    else()
      set(CPACK_RPM_PACKAGE_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
    endif()
  endif()

  set(CPACK_RPM_PACKAGE_SUMMARY "TerraMA2")
  set(CPACK_RPM_PACKAGE_NAME "terrama2-@TERRAMA2_VERSION_STRING@-@TERRAMA2_PKG_ARCHITECTURE@")
  set(CPACK_RPM_PACKAGE_VERSION "@TERRAMA2_VERSION_STRING@")

  set(CPACK_RPM_PACKAGE_GROUP "terrama2")
  set(CPACK_RPM_PACKAGE_VENDOR "DPI/INPE - Brazil")
endif()

if(CPACK_GENERATOR MATCHES "PACKAGEMAKER")
  #set(CPACK_PACKAGE_FILE_NAME "terrama2-@TERRAMA2_VERSION_STRING@-macosx")
  set(CPACK_RESOURCE_FILE_WELCOME @TERRAMA2_ABSOLUTE_ROOT_DIR@/build/cmake/WELCOME-PACKAGEMAKER)
  set(CPACK_RESOURCE_FILE_README @TERRAMA2_ABSOLUTE_ROOT_DIR@/build/cmake/GENERAL-README)
endif()
