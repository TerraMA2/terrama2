/*
  Copyright (C) 2007 National Institute For Space Research (INPE) - Brazil.

  This file is part of TerraMA2 - a free and open source computational
  platform for analysis, monitoring, and alert of geo-environmental extremes.

  TerraMA2 is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License,
  or (at your option) any later version.

  TerraMA2 is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with TerraMA2. See LICENSE. If not, write to
  TerraMA2 Team at <terrama2-team@dpi.inpe.br>.
*/

/*!
  \file terrama2/gui/config/AlertIconSetDialog.hpp

  \brief Definition of methods in class AlertIconSetDialog.hpp

  \author Evandro Delatin
  \author Raphael Willian da Costa
*/
  
#ifndef _ALERT_ICON_SET_DLG_H
#define _ALERT_ICON_SET_DLG_H

// Generated by QT
#include "ui_AlertIconSetDialog.h"

// QT
#include <QPainter>
#include <QAbstractItemDelegate>

const int maxAlertIconSize = 32;

class ListDelegate : public QAbstractItemDelegate
{
public:
  ListDelegate(QObject *parent = 0) : QAbstractItemDelegate(parent) {}

  void paint ( QPainter * painter, const QStyleOptionViewItem & option, const QModelIndex & index ) const
  {
    QRect r = option.rect;

    painter->setPen(Qt::NoPen);

    if(option.state & QStyle::State_Selected)
    {
      painter->setBrush(Qt::darkBlue);
      painter->drawRect(r);
    }
    else
    {
      painter->setBrush(Qt::white);
      painter->drawRect(r);
    }

    QIcon ic = QIcon(qvariant_cast<QPixmap>(index.data(Qt::DecorationRole)));
    if (!ic.isNull())
    {
      r = option.rect.adjusted(2, 2, -2, -2);
      ic.paint(painter, r, Qt::AlignVCenter|Qt::AlignLeft);
    }

  }

  QSize sizeHint (const QStyleOptionViewItem & option, const QModelIndex & index) const
  {
    Q_UNUSED(option); Q_UNUSED(index);
    return QSize(maxAlertIconSize+4, maxAlertIconSize+4);
  }

  virtual ~ListDelegate() {}
};


class AlertIconList;

class AlertIconSetDialog : public QDialog, private Ui::AlertIconSetDialog
{
  Q_OBJECT
  
public:
  AlertIconSetDialog(QWidget *parent = 0, Qt::WFlags f = 0);
  ~AlertIconSetDialog() {}

  void setFields(AlertIconList *alertIconList);
  void getFields(bool& changed);

private slots:
  void addImage();
  void removeImage();

private:
  QWidget       *_parent;
  bool           _changed;
  AlertIconList *_alertIconList;
};

#endif // _ALERT_ICON_SET_DLG_H
