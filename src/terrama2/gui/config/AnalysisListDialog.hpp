/************************************************************************************
TerraMA² is a development platform of Monitoring, Analysis and Alert for
geoenvironmental extremes. Applied to natural disasters, quality of water / air / atmosphere,
tailings basins, epidemics and others.Copyright © 2012 INPE.

This code is part of the TerraMA² framework.
This framework is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

You should have received a copy of the GNU General Public
License along with this library.

The authors reassure the license terms regarding the warranties.
They specifically disclaim any warranties, including, but not limited to,
the implied warranties of merchantability and fitness for a particular purpose.
The library provided hereunder is on an "as is" basis, and the authors have no
obligation to provide maintenance, support, updates, enhancements,
or modifications.

In no event shall INPE or K2 SISTEMAS be held liable to any party for direct, indirect,
special, incidental, or consequential damages arising out of the use of this
library and its documentation.
*************************************************************************************/

/*!
 * \file AnalysisListDialog.hpp
 *
 * \brief Definicao da classe AnalysisListDialog
 *
 * \author Celso Luiz Ramos Cruz
 * \date february, 2008 
 * \version $Id$
 *
*/

#ifndef _ANALYSISLISTDLG_H_
#define _ANALYSISLISTDLG_H_

// TerraMA2
#include "analysisList.h"
#include "soapModAnaliseProxy.h"

// Generated by QT
#include "ui_AnalysisListDialog.h"

// QT
#include <QList>


class AnalysisListDialog : public QDialog, private Ui::AnalysisListDialog
{
Q_OBJECT

public:
  AnalysisListDialog(bool hideWarningCombo, QWidget* parent = 0, Qt::WFlags f = 0 );
  ~AnalysisListDialog();

  bool setFields(const std::vector<struct wsAnalysisRule>& analysisRules, AnalysisList* anaList);
  bool setFields(const std::vector<struct wsUserView>& userViews, AnalysisList* anaList);
  void getFields(QList<int>& newIDSelectedAnalyses, bool& changed);
  void getLevels(int& email, int& cellphone, int& report);

private:
  bool findAnalysisRule(const std::vector<struct wsUserView>& userViews, const wsAnalysisRule& anaRule);
  bool findAnalysisRule(const std::vector<struct wsAnalysisRule>& analysisRules, const wsAnalysisRule& anaRule);
  void fillWarningComboBox(QComboBox* combo, int currentIndex = 0);
  void fillReportComboBox(QComboBox* combo, int currentIndex = 0);
};


#endif

